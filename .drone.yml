kind: pipeline
type: docker
name: test

steps:
  - name: Test Node
    image: satantime/puppeteer-node:21-bookworm-slim
    commands:
      - ln -fs .env.development .env
      - apt-get update && apt-get install -y curl chromium git
      - npm ci
      - npm run test-node
    environment:
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium
      CHROME_PATH: /usr/bin/chromium

  - name: Test Bash
    image: koalaman/shellcheck-alpine:stable
    commands:
      - ln -fs .env.development .env
      - shellcheck -x bin/*.sh

  - name: Test Dockerfile
    image: hadolint/hadolint:latest-alpine
    commands:
      - hadolint Dockerfile --ignore=DL3008 --ignore=SC2046 --ignore=SC2006

  - name: Test Nginx
    image: python:3.12-alpine
    commands:
      - pip install gixy==0.1.20 pyparsing==2.4.7
      - gixy config/nginx/*

  - name: Build Docker Container
    depends_on:
      - Test Node
      - Test Bash
      - Test Dockerfile
      - Test Nginx
    image: plugins/docker
    settings:
      repo: codemancer
      tags: test
      dry_run: true

  - name: Deploy
    depends_on:
      - Build Docker Container
    environment:
      SSH_KEY:
        from_secret: ssh_key
    image: albertyw/ssh-client:4.1.2
    commands:
      - ssh-keyscan direct.albertyw.com >> /root/.ssh/known_hosts
      - echo "$${SSH_KEY}" > /root/.ssh/id_ed25519
      - chmod 600 /root/.ssh/id_ed25519
      - ssh albertyw@direct.albertyw.com codemancer/bin/deploy.sh master
    when:
      branch:
        - master

  - name: Purge Cache
    depends_on:
      - Deploy
    image: curlimages/curl:8.7.1
    commands:
      - |-
        curl -X DELETE "https://api.cloudflare.com/client/v4/zones/$${CLOUDFLARE_ZONE_ID}/purge_cache" -H "Authorization: Bearer $${CLOUDFLARE_API_KEY}" -H "Content-Type: application/json" --data '{"purge_everything":true}'
    when:
      branch:
        - master
    environment:
      CLOUDFLARE_ZONE_ID:
        from_secret: CLOUDFLARE_ZONE_ID
      CLOUDFLARE_API_KEY:
        from_secret: CLOUDFLARE_API_KEY
